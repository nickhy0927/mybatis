<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.platform.userrole.dao.UserRoleMapper">
    <insert id="insert" parameterType="com.mybatis.platform.userrole.entity.UserRole">
		insert into sys_user_role (status, user_id, role_id, id, create_time, update_time)
		values (#{status}, #{userId}, #{roleId}, #{id},  #{createTime}, #{updateTime})
	</insert>
    <!--批量新增-->
    <insert id="insertBatch" parameterType="com.mybatis.platform.userrole.entity.UserRole">
		insert into sys_user_role (status, user_id, role_id, id, create_time, update_time)
		values
		  <foreach collection="list" separator="," item="item">
              (#{item.status}, #{item.userId}, #{item.roleId}, #{item.id}, #{item.createTime}, #{item.updateTime})
          </foreach>
	</insert>

    <delete id="delete" parameterType="java.lang.String">
		delete from sys_user_role where user_id = #{userId}
	</delete>

    <delete id="deleteBatch" parameterType="java.util.List">
        delete from sys_user_role where id in
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="update" parameterType="com.mybatis.platform.userrole.entity.UserRole">
        update sys_user_role
        <trim prefix="set" prefixOverrides="," suffixOverrides=",">
            <if test="status != null">status = #{status},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="roleId != null">role_id = #{roleId},</if>
            <if test="id != null">id = #{id},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="updateBatch" parameterType="com.mybatis.platform.userrole.entity.UserRole">
        update sys_user_role
        <trim prefix="set" prefixOverrides="," suffixOverrides=",">
            <if test="status != null">status = #{status},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="roleId != null">role_id = #{roleId},</if>
            <if test="id != null">id = #{id},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <select id="get" parameterType="String" resultType="com.mybatis.platform.userrole.entity.UserRole">
		select 
            status, user_id, role_id,
			id, create_time, update_time
		from sys_user_role where id = #{id}
	</select>
    <select id="queryUserRoleList" parameterType="String" resultType="com.mybatis.platform.userrole.entity.UserRole">
		select
            status, user_id, role_id, id, create_time, update_time
		from sys_user_role where user_id = #{userId}
	</select>
    <select id="getObject"
            parameterType="com.mybatis.platform.userrole.entity.UserRole"
            resultType="com.mybatis.platform.userrole.entity.UserRole">
		select 
            status, user_id, role_id,
			id, create_time, update_time
		from sys_user_role where id = #{id}
	</select>

    <select id="queryListByMap" parameterType="java.util.Map"
            resultType="com.mybatis.platform.userrole.entity.UserRole">
        select
            status, user_id, role_id,
            id, create_time, update_time
        from sys_user_role
        <include refid="conditions"/>
    </select>

    <select id="queryListByObject"
            parameterType="com.mybatis.platform.userrole.entity.UserRole"
            resultType="com.mybatis.platform.userrole.entity.UserRole">
        select
            status, user_id, role_id,
            id, create_time, update_time
        from sys_user_role
        <include refid="conditions"/>
    </select>

    <select id="queryPageByMap" parameterType="java.util.Map"
            resultType="com.mybatis.platform.userrole.entity.UserRole">
        select
            status, user_id, role_id,
            id, create_time, update_time
        from sys_user_role
        <include refid="conditions"/>
        order by
        <choose>
            <when test="order != null">${order} ${sort}</when>
            <when test="order != null">create_time desc</when>
        </choose>
    </select>

    <sql id="conditions">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="status != null">and status = #{status}</if>
            <if test="userId != null">and user_id = #{userId}</if>
            <if test="roleId != null">and role_id = #{roleId}</if>
            <if test="id != null">and id = #{id}</if>
            <if test="createTime != null">and create_time = #{createTime}</if>
            <if test="updateTime != null">and update_time = #{updateTime}</if>
        </trim>
    </sql>
</mapper>
